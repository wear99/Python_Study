# 当我们定义一个class的时候，可以从某个现有的class继承，新的class称为子类（Subclass），
# 而被继承的class称为基类、父类或超类（Base class、Super class）。

# 继承: 最大的好处是子类获得了父类的全部功能.在此基础上还可以定义自己的方法和属性.
# 多态: 如果子类的方法或属性和父类相同,则在此子类的实例中会覆盖父类的


# 定义了 动物 这个类,并定义了 种类 这个方法.
class 动物():
    def 种类(self):
        print('动物有很多种')


# 再定义一个狗 的类,继承自动物.
# 当子类中也有 种类这个方法时,会覆盖掉 父类的
class 狗(动物):
    def 种类(self):
        print('狗有很多种')


class 猫(动物):
    def 种类(self):
        print('猫有很多种')


小狗 = 狗()
# 狗自动获得了动物下的方法 种类
小狗.种类()

# 要理解什么是多态，我们首先要对数据类型再作一点说明。当我们定义一个class的时候，
# 我们实际上就定义了一种数据类型。我们定义的数据类型和Python自带的数据类型，
# 比如str、list、dict没什么两样：


# 多态的好处, 当我们定义函数,传入类数据类型,则其子类都可以自动适应
# 即 子类也可以看做父类,但父类不能看做子类
def 种类2(动物):
    动物.种类()
    动物.种类()


print('子类的实例可以直接适用父类的数据类型')
种类2(小狗)
小猫 = 猫()
种类2(小猫)

'''
小结
继承可以把父类的所有功能都直接拿过来，这样就不必重零做起，子类只需要新增自己特有的方法，
也可以把父类不适合的方法覆盖重写。
'''