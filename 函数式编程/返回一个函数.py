# 高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回
# !!!返回一个函数时，牢记该函数 并 未 执 行 !!!，而是在该返回值后面加()时才执行。返回函数中不要引用任何可能会变化的变量。

def 打印(s):
    def 现在打印(m):
        print(s,m)
        
    return 现在打印  # 当调用 打印 时返回的是 立即打印 这个函数，并没有被执行 
    
s=打印('hello')     #相当于s=现在打印()，并未执行

print('*****加括号时才执行******')

s('可以对内层函数再传入参数')

# 内部函数sum可以引用外部函数lazy_sum的参数和局部变量，当lazy_sum返回函数sum时，相关参数和变量都保存在返回的函数中，
# 这种称为“闭包（Closure）”的程序结构拥有极大的威力。
