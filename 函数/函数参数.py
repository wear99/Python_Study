#Python的函数定义非常简单，但灵活度却非常大。除了正常定义的必选参数外，
# 还可以使用默认参数、可变参数和关键字参数，使得函数定义出来的接口，
# 不但能处理复杂的参数，还可以简化调用者的代码。


# 这两个参数都是位置参数，调用函数时，传入的两个值按照位置顺序依次赋给参数
def 乘方(x,n):
    return x ** n

############################
# 默认参数
# n=2是默认参数,当未传入时仍可正常计算,按默认值进行
# 最大的好处是能降低调用函数的难度,避免重复输入信息

# 注意:必选参数在前，默认参数在后
# 定义默认参数要牢记一点：默认参数必须指向不变对象,不能指向list之类的,
# 一旦默认参数的值被改变一次,就会被改变.

def 乘方2(x,n=2):
    return x ** n

########################
# 可变参数,传入的参数个数是可变的
# 也可以使用list参数,事先把要计算的参数组装成一个list,再传进来
def 求和(*n):
    sum = 0
    for x in n:  #实际上自动把传入的参数组装成了个元组tuple,
        sum += x
    return sum

print(求和(1,2,3,4))

# 已经有一个list或者tuple，要调用一个可变参数怎么办？
num=[1, 2, 3, 4, 5]
# 在list或tuple前面加一个*号，把list或tuple的所有元素变成可变参数传进去
print(求和(*num))


#####################
# 关键词参数,允许你传入任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict
# 可以扩展函数功能,类似可以自己添加函数的属性

def 信息(name,age,**other):
    print(name,age,other)

# 可以额外输入一个性别:男 的信息
信息('sun',20,性别='男')


####################
#命名关键词 def 信息(name,age,*,性别):


def my(a):                      #函数有形参和实参
    a = 1                       #函数中只是把外部的值复制进来，不会改动外部的变量，
    global b                    #如果要引用外部变量,则加上global, 如果时引用上层函数的用nolocal
    b = 2
    print('这是函数中的a,b',a,b)

a = 10
b = 20
my(a)

print('这是程序中的a,b',a,b)